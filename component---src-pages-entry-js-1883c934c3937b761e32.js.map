{"version":3,"sources":["webpack:///./src/components/Comment.js","webpack:///./src/components/Reply.js","webpack:///./src/pages/entry.js","webpack:///./src/helpers/search_query.js"],"names":["CommentBox","comment","className","author_name","date","message","Reply","entry","useState","setComment","entryData","setEntryData","placeholder","onChange","target","value","onClick","event","preventDefault","length","addComment","_id","responses","map","Comment","key","ItemScreen","entryID","location","name","replace","results","RegExp","exec","search","decodeURIComponent","getParameterByName","loadDataById","Header","src","author","photo","title","children"],"mappings":"uNAkBeA,G,UAbI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACjB,OACI,yBAAKC,UAAU,eACX,8BAAM,4BAAKD,EAAQE,aAAnB,IAAqC,+BAAQF,EAAQG,OACrD,8BAAOH,EAAQI,Y,YC0CZC,G,UA5CD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EAEOC,qBAAvBP,EAFgB,KAEPQ,EAFO,OAGWD,mBAASD,GAApCG,EAHgB,KAGLC,EAHK,KAiBvB,OACI,yBAAKT,UAAU,aACX,wCACA,0BAAMA,UAAU,mBACR,8BACIA,UAAU,UACVU,YAAY,0BACZC,SAnBQ,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAC1BL,EAAWK,EAAOC,QAmBFA,MAAOd,IAEf,4BAAQe,QAjBC,SAACC,GAClBA,EAAMC,iBACHjB,EAAQkB,OAAS,IACpBV,EAAW,IACXE,EAAaS,YAAWnB,EAASS,EAAUW,SAanC,aAEJ,2CAEIX,EAAUY,UAAUH,OAAS,EACzBT,EAAUY,UAAUC,KAAI,SAACtB,GACrB,OAAO,kBAACuB,EAAD,CAAYC,IAAKxB,EAAQwB,IAAKxB,QAASA,OAC/C,uD,sBCiBRyB,UA7CI,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAEtBlB,EAAYiB,GCfc,SAACE,EAAMD,GACrCC,EAAOA,EAAKC,QAAQ,OAAQ,OAAOA,QAAQ,OAAQ,OACnD,IACAC,EADY,IAAIC,OAAO,SAAWH,EAAO,aACzBI,KAAKL,EAASM,SAAW,CAAC,CAAE,IAC5C,OAAOC,mBAAmBJ,EAAQ,GAAGD,QAAQ,MAAO,MDWzBM,CAAmB,UAAWR,GAIzD,OAHAlB,EAAY2B,YAAa3B,KAGRA,IAAc,GAU3B,oCACA,kBAAC4B,EAAA,EAAD,MACA,yBAAKpC,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACX,yBAAKqC,IAAK7B,EAAU8B,OAAOC,QAC3B,6BACI,4BAAK/B,EAAUgC,OACf,+BAAO,sCAAP,IAAuBhC,EAAU8B,OAAOX,MAAa,6BACrD,+BAAO,0CAAP,IAA2BnB,EAAUN,QAG7C,8BAEJ,kBAAC,IAAD,CACIF,UAAU,YACVyC,SAAUjC,EAAUL,UAExB,6BACA,kBAAC,EAAD,CAAOE,MAAOG,MA3Bd,oCACA,kBAAC4B,EAAA,EAAD,CAAQV,SAAUA,IAClB,wCAAc","file":"component---src-pages-entry-js-1883c934c3937b761e32.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"../css/comment.css\";\r\n\r\nconst CommentBox = ({comment}) => {\r\n    return (\r\n        <div className=\"comment-box\">\r\n            <span><h3>{comment.author_name}</h3> <small>{comment.date}</small></span>\r\n            <span>{comment.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nCommentBox.propTypes = {\r\n    comment: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CommentBox;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CommentBox from '../components/Comment';\r\nimport { addComment } from '../helpers/load_data';\r\n\r\nimport \"../css/reply.css\";\r\n\r\nconst Reply = ({entry}) => {\r\n    \r\n    const [comment, setComment] = useState();\r\n    const [entryData, setEntryData] = useState(entry);\r\n\r\n    const handleCommentChange = ({target})=>{\r\n        setComment(target.value);\r\n    }\r\n\r\n\r\n    const handleSubmit = (event)=>{\r\n        event.preventDefault();\r\n        if(comment.length < 3) return;\r\n        setComment(\"\");\r\n        setEntryData(addComment(comment, entryData._id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h4>Comentar</h4>\r\n            <form className=\"comment-form hr\">\r\n                    <textarea\r\n                        className=\"comment\"\r\n                        placeholder=\"Deja aquÃ­ tu comentario\"\r\n                        onChange={handleCommentChange}\r\n                        value={comment}\r\n                    />\r\n                <button onClick={handleSubmit}>Comentar</button>\r\n            </form>\r\n            <h3>Comentarios</h3>\r\n            {\r\n                entryData.responses.length > 0?\r\n                    entryData.responses.map((comment)=>{\r\n                        return <CommentBox key={comment.key} comment={comment} />\r\n                    }):<span>No hay comentarios</span>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nReply.propTypes = {\r\n    entry: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Reply;\r\n","// const gfm = require('remark-gfm');\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getParameterByName } from '../helpers/search_query';\r\nimport Reply from '../components/Reply';\r\nimport { Header } from '../components/Header';\r\n\r\nimport { loadDataById } from '../helpers/load_data';\r\nimport \"../css/blog.css\";\r\n\r\nconst ItemScreen = ({entryID, location}) => {\r\n\r\n    let entryData = entryID || getParameterByName(\"entryID\", location);\r\n    entryData = loadDataById(entryData);\r\n\r\n\r\n    if(!entryData || entryData === []) {\r\n        return (\r\n            <>\r\n            <Header location={location}/>\r\n            <h2>Url rota {\":(\"}</h2>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>        \r\n        <Header />\r\n        <div className=\"data\">\r\n            <div className=\"container hr\">\r\n                <div className=\"banner\">\r\n                    <img src={entryData.author.photo} />\r\n                    <div>\r\n                        <h2>{entryData.title}</h2>\r\n                        <small><b>Autor: </b> {entryData.author.name}</small><br/>\r\n                        <small><b>Creado el: </b> {entryData.date}</small>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n            <ReactMarkdown \r\n                className=\"container\" \r\n                children={entryData.message} \r\n            />\r\n            <br/>\r\n            <Reply entry={entryData}/>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nItemScreen.propTypes = {\r\n    entry: PropTypes.object\r\n}\r\n\r\nexport default ItemScreen;\r\n","export const getParameterByName = (name, location) => {\r\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\r\n    results = regex.exec(location.search) || [, \"\"];\r\n    return decodeURIComponent(results[1].replace(/\\+/g, \" \"));\r\n}"],"sourceRoot":""}